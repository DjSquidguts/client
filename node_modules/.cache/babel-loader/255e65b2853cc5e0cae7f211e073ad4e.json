{"ast":null,"code":"var _jsxFileName = \"/Users/keyinstudent/REACT-JS-Projects/wattaya-app/client/src/components/OpenConversation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\nimport { useConversations } from \"../contexts/ConversationsProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OpenConversation() {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const lastMessageRef = useRef();\n  const {\n    sendMessage,\n    selectedConversation\n  } = useConversations();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    sendMessage(selectedConversation.recipients.map(r => r.id), text);\n    setText(\"\");\n  }\n\n  useEffect(() => {\n    if (lastMessageRef.current) {\n      lastMessageRef.current.scrollIntoView({\n        smooth: true\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column flex-grow-1\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 overflow-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column align-items-start justify-content-end px-3\",\n        children: selectedConversation.messages.map((message, index) => {\n          const lastyMessage = selectedConversation.messages.length - 1 === index;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: lastyMessage ? lastMessageRef : null,\n            className: `my-1 d-flex flex-column $ \n                {message.fromMe ? \"align-self-end\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `rounded px-2 py-1 ${message.fromMe ? \"bg-primary text-white\" : \"border\"}`,\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `text-muted small ${message.fromMe ? \"text-right\" : \"\"}`,\n              children: message.fromMe ? \"From Me\" : message.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow-1 overflow-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"m-3\",\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              required: true,\n              value: text,\n              onChange: e => setText(e.target.value),\n              style: {\n                height: \"75px\",\n                resize: \"none\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              className: \"m-1\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OpenConversation, \"OZIGc6u//vctCT+T5oI0XBbQV7Y=\", false, function () {\n  return [useConversations];\n});\n\n_c = OpenConversation;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpenConversation\");","map":{"version":3,"sources":["/Users/keyinstudent/REACT-JS-Projects/wattaya-app/client/src/components/OpenConversation.js"],"names":["React","useState","useRef","useEffect","Form","InputGroup","Button","useConversations","OpenConversation","text","setText","lastMessageRef","sendMessage","selectedConversation","handleSubmit","e","preventDefault","recipients","map","r","id","current","scrollIntoView","smooth","messages","message","index","lastyMessage","length","fromMe","senderName","target","value","height","resize"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\nimport { useConversations } from \"../contexts/ConversationsProvider\";\n\nexport default function OpenConversation() {\n  const [text, setText] = useState(\"\");\n  const lastMessageRef = useRef();\n  const { sendMessage, selectedConversation } = useConversations();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    sendMessage(\n      selectedConversation.recipients.map((r) => r.id),\n      text\n    );\n    setText(\"\");\n  }\n\n  useEffect(() => {\n    if (lastMessageRef.current) {\n      lastMessageRef.current.scrollIntoView({ smooth: true });\n    }\n  });\n\n  return (\n    <div className=\"d-flex flex-column flex-grow-1\">\n      <div className=\"flex-grow-1 overflow-auto\">\n        <div className=\"d-flex flex-column align-items-start justify-content-end px-3\">\n          {selectedConversation.messages.map((message, index) => {\n            const lastyMessage =\n              selectedConversation.messages.length - 1 === index;\n            return (\n              <div\n                ref={lastyMessage ? lastMessageRef : null}\n                key={index}\n                className={`my-1 d-flex flex-column $ \n                {message.fromMe ? \"align-self-end\" : \"\"}`}\n              >\n                <div\n                  className={`rounded px-2 py-1 ${\n                    message.fromMe ? \"bg-primary text-white\" : \"border\"\n                  }`}\n                >\n                  {message.text}\n                </div>\n                <div\n                  className={`text-muted small ${\n                    message.fromMe ? \"text-right\" : \"\"\n                  }`}\n                >\n                  {message.fromMe ? \"From Me\" : message.senderName}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"flex-grow-1 overflow-auto\"></div>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group className=\"m-3\">\n            <InputGroup>\n              <Form.Control\n                as=\"textarea\"\n                required\n                value={text}\n                onChange={(e) => setText(e.target.value)}\n                style={{ height: \"75px\", resize: \"none\" }}\n              />\n              <InputGroup className=\"m-1\">\n                <Button type=\"submit\">Send</Button>\n              </InputGroup>\n            </InputGroup>\n          </Form.Group>\n        </Form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}